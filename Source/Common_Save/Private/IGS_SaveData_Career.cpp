#include "IGS_SaveData_Career.h"
#include "GameplayTagContainer.h"
#include "EMETA_ArmyTier.h"
#include "EMETA_CareerCompletionReason.h"
#include "EMETA_EventTime.h"
#include "EMETA_Gang.h"
#include "EMETA_Heat.h"
#include "EMETA_RespectLvl.h"
#include "EMETA_TradeVendor.h"
#include "EMETA_UsingCrewInGraph.h"

FIGS_SaveData_Career::FIGS_SaveData_Career() {
    (*this).SaveSlot = TEXT("");
    (*this).bIsFilled = false;
    (*this).CampaignVersion = TEXT("");
    (*this).BlackmarketManagerData.GenericRecruitsPool = {};
    (*this).BlackmarketManagerData.GenericCheapRecruitsPool = {};
    (*this).BlackmarketManagerData.UniqueRecruitsPool = {};
    (*this).BlackmarketManagerData.WeaponsBlackmarket = {};
    (*this).BlackmarketManagerData.EquipmentBlackmarket = {};
    (*this).BlackmarketManagerData.UnseenUnlockedCharacterTagIDs = {};
    (*this).BlackmarketManagerData.UnseenUnlockedWeaponTagIDs = {};
    (*this).BlackmarketManagerData.UnseenUnlockedEquipmentTagIDs = {};
    (*this).BlackmarketManagerData.GenericPrevID = 0;
    (*this).BlackmarketManagerData.DayWhenHeistersMarketBecameAvailable = 0;
    (*this).BlackmarketManagerData.DayWhenWeaponsMarketBecameAvailable = 0;
    (*this).BlackmarketManagerData.PlotlineAssetsPool = {};
    (*this).BlackmarketManagerData.TemporaryLockedPlotlineAssetsTags = FGameplayTagContainer();
    (*this).BlackmarketManagerData.ActiveLootEvent.Vendor = EMETA_TradeVendor::UNDEFINED;
    (*this).BlackmarketManagerData.ActiveLootEvent.LootTag = FGameplayTag();
    (*this).BlackmarketManagerData.ActiveLootEvent.MinLootValue = 0;
    (*this).BlackmarketManagerData.ActiveLootEvent.MissionID = nullptr;
    (*this).BlackmarketManagerData.ReadyLootEvents = {};
    (*this).BlackmarketManagerData.BaseDayForLootEvents = 0;
    (*this).BlackmarketManagerData.WeaponEvent.Cooldown = 0;
    (*this).BlackmarketManagerData.WeaponEvent.MinAvailableCash = 0;
    (*this).BlackmarketManagerData.WeaponEvent.NumberOfWeaponsPerEvent = 1;
    (*this).BlackmarketManagerData.WeaponEvent.ExpirationTime = 0;
    (*this).BlackmarketManagerData.WeaponEvent.WeaponClassesChances = {};
    (*this).BlackmarketManagerData.WeaponEvent.WeaponQualitiesChances = {};
    (*this).BlackmarketManagerData.WeaponsEventPool = {};
    (*this).BlackmarketManagerData.BaseDayForWeaponEvent = 0;
    (*this).BlackmarketManagerData.EquipmentEvent.Cooldown = 0;
    (*this).BlackmarketManagerData.EquipmentEvent.MinAvailableCash = 0;
    (*this).BlackmarketManagerData.EquipmentEvent.NumberOfEquipmentPerEvent = 1;
    (*this).BlackmarketManagerData.EquipmentEvent.ExpirationTime = 0;
    (*this).BlackmarketManagerData.EquipmentEvent.EquipmentQualitiesChances = {};
    (*this).BlackmarketManagerData.EquipmentEventPool = {};
    (*this).BlackmarketManagerData.BaseDayForEquipmentEvent = 0;
    (*this).BlackmarketManagerData.WeaponsPoolRefreshesCounter = 0;
    (*this).BlackmarketManagerData.WeaponsPoolRefreshesPrice = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierCostMultiplierForAttack = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierCostMultiplierForAttackNeutral = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierCostMultiplierForDefense = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierUpkeepCost = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierHireCost = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.SoldierHireCostMultiplierInPercent = 0.000000000e+00f;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.SoldierHireAmountPerHireEvent.Min = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.SoldierHireAmountPerHireEvent.Max = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.ShouldBeClampedByArmyCapacity = false;
    (*this).BlackmarketManagerData.HireArmyEventData.HireArmyEventConfig.ClampedMinimumArmy = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireEventDelay.Min = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireEventDelay.Max = 0;
    (*this).BlackmarketManagerData.HireArmyEventData.HireEventDurationTime = 0;
    (*this).BlackmarketManagerData.AmountOfGeneratedSoldiers = 0;
    (*this).BlackmarketManagerData.BaseDayForHireArmyEvent = 0;
    (*this).BlackmarketManagerData.AmountOfBoughtCheapHeisters = 0;
    (*this).BlackmarketManagerData.HeistersPoolRefreshesCounter = 0;
    (*this).BlackmarketManagerData.HeistersPoolRefreshPrice = 0;
    (*this).CrewManagerData.GenericCrewHeisters = {};
    (*this).CrewManagerData.UniqueCrewHeisters = {};
    (*this).CrewManagerData.GenericHeistersOnJob = {};
    (*this).CrewManagerData.UniqueHeistersOnJob = {};
    (*this).CrewManagerData.RemovedHeisters = {};
    (*this).CrewManagerData.RecoveryInfoOfHeistersInjures = {};
    (*this).CrewManagerData.HeistersMoodResetCounter = {};
    (*this).CrewManagerData.CounterOfDeathPreventingUsage = {};
    (*this).CrewManagerData.RevengePool = {};
    (*this).CrewManagerData.UnlockedCharacters = {};
    (*this).CrewManagerData.RemainAmountOfCompletedMissionsBeforeUnlock = 0;
    (*this).CrewManagerData.RemainAmountOfDaysForHealingCharacter = {};
    (*this).DailyManagerData.CurrentDay = 0;
    (*this).StashManagerData.WeaponsStash = {};
    (*this).StashManagerData.Equipment = {};
    (*this).StashManagerData.ActionCards = {};
    (*this).StashManagerData.ActionCardsDurationCounter = {};
    (*this).StashManagerData.PlayerRespect = EMETA_RespectLvl::Low;
    (*this).StashManagerData.Army = 0;
    (*this).StashManagerData.AvailableArmy = 0;
    (*this).StashManagerData.ArmyTier = EMETA_ArmyTier::Low;
    (*this).StashManagerData.PartnersInfo = {};
    (*this).StashManagerData.Loot = {};
    (*this).StashManagerData.CurrentLootValueWasSoldToPawnShop = 0;
    (*this).StashManagerData.PawnShopTrends = {};
    (*this).StashManagerData.LastDayWhenWarehouseAttackStarted = -1;
    (*this).StashManagerData.ChanceWarehouseAttack = 0;
    (*this).StashManagerData.WarehouseAttackMissionID = nullptr;
    (*this).StashManagerData.LootForWarehouseAttack = {};
    (*this).StashManagerData.MoneyForWarehouseAttack = 0;
    (*this).EventManagerData.DefaultGraphValues = {};
    (*this).EventManagerData.HeistersOnEvent = {};
    (*this).EventManagerData.EventTime = EMETA_EventTime::DayStart;
    (*this).EventManagerData.SavedGraphVariables = {};
    (*this).EventManagerData.bPoolFrozen = false;
    (*this).EventManagerData.SavedTimerNodes = {};
    (*this).EventManagerData.SavedLoopBranchNodes = {};
    (*this).EventManagerData.FinishedGraphsResults = {};
    (*this).EventManagerData.PreparedPlotlines = {};
    (*this).EventManagerData.SavedEconomyGraphVariables = {};
    (*this).EventManagerData.SavedParentGraphs = {};
    (*this).EventManagerData.bShouldCallEndDay = false;
    (*this).EventManagerData.bEndDayWasCalled = false;
    (*this).GoalManagerData.StoryGoalsSave = {};
    (*this).GoalManagerData.MoneyMakingGoalsSave = {};
    (*this).GoalManagerData.GoalsPools = {};
    (*this).GoalManagerData.BacklogGoalsPools = {};
    (*this).GoalManagerData.FinishedGoals = {};
    (*this).GoalManagerData.GoalsRepeatCounters = {};
    (*this).GoalManagerData.HiddenGoalsData = {};
    (*this).JobManagerData.CurrentJob = nullptr;
    (*this).JobManagerData.CurrentJobTileID = FGameplayTag();
    (*this).JobManagerData.JobsOnMap.MoneyMakingMissions = {};
    (*this).JobManagerData.JobsOnMap.AmbushMissions = {};
    (*this).JobManagerData.JobsOnMap.StoryMissions = {};
    (*this).JobManagerData.JobsOnMap.TradeMissions = {};
    (*this).JobManagerData.JobsOnMap.TradeDealSellMissions = {};
    (*this).JobManagerData.JobsOnMap.CinematicMissions = {};
    (*this).JobManagerData.JobsOnMap.TurfWarMissions = {};
    (*this).JobManagerData.JobsOnMap.OtherMissions = {};
    (*this).JobManagerData.JobParameters = {};
    (*this).JobManagerData.JobsCompletedAmount = 0;
    (*this).JobManagerData.JobsSpawnDay = {};
    (*this).JobManagerData.bWasPlayerTransferredToFPSSide = false;
    (*this).JobManagerData.FinishedMissions = {};
    (*this).JobManagerData.bUsingTemporaryCrewAfterFPS = EMETA_UsingCrewInGraph::TemporaryCrew;
    (*this).JobManagerData.RecentlyPlayedPresetsPerScenario = {};
    (*this).JobManagerData.RecentlyPlayedJobData = {};
    (*this).RandomEventManagerData.RandEventCategoriesInfo = {};
    (*this).RandomEventManagerData.CurrentPartnersRandEvents = {};
    (*this).RandomEventManagerData.ReadyForActivationEvents = {};
    (*this).RandomEventManagerData.EventsSpecificCooldown = {};
    (*this).RandomEventManagerData.SelectedGangForEvent = {};
    (*this).RandomEventManagerData.EventRewards = {};
    (*this).RandomEventManagerData.CrewEventMissions = {};
    (*this).RandomEventManagerData.CalculatedCostForGenericEvents = {};
    (*this).RandomEventManagerData.CrewEventMissionsPrices = {};
    (*this).RandomEventManagerData.CrewEventsAndTheirGraphs = {};
    (*this).RandomEventManagerData.HeistersStateChangesHistory = {};
    (*this).RandomEventManagerData.MissingHeistersEventsData = {};
    (*this).RandomEventManagerData.CooldownCounterForFuneralOfGenericHeisters = 0;
    (*this).RandomEventManagerData.UnfulfilledEvents = {};
    (*this).CityMapManagerData.TilesSaveData = {};
    (*this).CityMapManagerData.BaseStrengthOfTiles = {};
    (*this).CityMapManagerData.LastDayOfTilesIncomeRefresh = 0;
    (*this).WarManagerData.GangsInfo = {};
    (*this).WarManagerData.ChanceCounterToAttackAdjacentTerritory = {};
    (*this).WarManagerData.AttemptsToCaptureTileCounter = 0;
    (*this).WarManagerData.TradeRelationshipWithGangs = {};
    (*this).WarManagerData.GangAttacksCooldown = {};
    (*this).WarManagerData.CounterForSpecialTier = {};
    (*this).WarManagerData.TradeVendorsCooldown = {};
    (*this).WarManagerData.TodaysLockedTilesForAI = {};
    (*this).WarManagerData.TurfHistory = {};
    (*this).WarManagerData.DaysWithMoreAttack = 0;
    (*this).WarManagerData.AILastTileConfigIndex = 0;
    (*this).WarManagerData.bIsAllTileCaptured = false;
    (*this).WarManagerData.bIsAllGangsEradicated = false;
    (*this).WarManagerData.GangChangeArmyTierQueue = {};
    (*this).FinanceManagerData.Balance = 0;
    (*this).FinanceManagerData.HiredCrewSpending = 0;
    (*this).FinanceManagerData.MarketSpending = 0;
    (*this).FinanceManagerData.DayWhenPlayerReachedBankruptState = 0;
    (*this).FinanceManagerData.CurrentLoan.ActivatedDay = 0;
    (*this).FinanceManagerData.CurrentLoan.BorrowedCash = 0.000000000e+00f;
    (*this).FinanceManagerData.CurrentLoan.DailyRepaymentInPercentsFromBorrowedCash = 0;
    (*this).FinanceManagerData.CurrentLoan.DaysToRepay = 0;
    (*this).FinanceManagerData.CurrentLoan.CooldownToNextOffer = 0;
    (*this).FinanceManagerData.CooldownToNextOffer = 0;
    (*this).FinanceManagerData.MissionIncome = 0;
    (*this).FinanceManagerData.TradeIncome = 0;
    (*this).FinanceManagerData.OtherIncome = 0;
    (*this).FinanceManagerData.OtherSpending = 0;
    (*this).MoneyMakingOpportunitiesData.bStarted = false;
    (*this).MoneyMakingOpportunitiesData.StartDay = 0;
    (*this).MoneyMakingOpportunitiesData.FinishDay = 0;
    (*this).HeatManagerData.DaysLeftForTheHeatRevision = 0;
    (*this).HeatManagerData.HeatState = EMETA_Heat::VeryLow;
    (*this).HeatManagerData.HeatValue = 0.000000000e+00f;
    (*this).HeatManagerData.PoliceInvestigationValue = 0.000000000e+00f;
    (*this).HeatManagerData.SheriffTargetGang = EMETA_Gang::None;
    (*this).HeatManagerData.GangsAttacksCounter = {};
    (*this).HeatManagerData.DetectivesPool = {};
    (*this).HeatManagerData.ActiveDetectives = {};
    (*this).HeatManagerData.UsedInvestigationValuesForDetectives = {};
    (*this).HeatManagerData.DeadDetectives = {};
    (*this).HeatManagerData.InvestigationEffects = {};
    (*this).HeatManagerData.HeatEffects = {};
    (*this).BossLevelManagerData.AmountOfPrimaryWeaponsIssued = 0;
    (*this).BossLevelManagerData.AmountOfAdditionalEquipmentIssued = 0;
    (*this).StatisticsManagerData.Statistic = {};
    (*this).PlanningBoardManagerData.ActivePlanningBoardTag = FGameplayTag();
    (*this).PlanningBoardManagerData.PlanningBoardItemsStatuses = {};
    (*this).CareerEnd.bIsPending = false;
    (*this).CareerEnd.bChallengeRewardGenerated = false;
    (*this).CareerEnd.bRewardsClaimed = false;
    (*this).CareerEnd.Reason = EMETA_CareerCompletionReason::NoTurfTiles;
    (*this).CareerEnd.BossKilledBy = EMETA_Gang::None;
    (*this).SaveDataVersion.JsonVersion = 0;
    (*this).SaveDataVersion.RevisionCreated = TEXT("");
    (*this).SaveDataVersion.RevisionSaved = TEXT("");
    (*this).SaveDataVersion.SnapshotRevision = TEXT("");
    (*this).StartingEntitlementTags = {};
}
